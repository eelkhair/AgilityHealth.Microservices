@page "/tags"

@using AH.Metadata.Shared.V1.Models.Responses.MasterTagCategories
@inject IMasterTagCategoryService MasterTagCategoryService  
@attribute [Authorize]
<PageTitle>Tags</PageTitle>
<h1>Tags</h1>

<TelerikTabStrip Width="1200px">
    <TabStripTab Title="Teams">
       
        <div style="display:inline-block; width: 49%">
            <TelerikGrid Data="@masterTeamCategories"
                                     EditMode="@GridEditMode.Popup"
                                     FilterMode="@GridFilterMode.FilterMenu"
                                     Sortable="true"
                                     Height="600px"
                                     OnUpdate="@UpdateHandler"
                                     OnCreate="@((args) => CreateHandler(args, "MasterTeamCategory"))"
                                     
                                     OnRowClick="@(async args => { await CategoryClicked(args); })">
                            <GridToolBarTemplate>
                                <GridCommandButton Command="Add">Add Category</GridCommandButton>
                            </GridToolBarTemplate>
                            <GridColumns>
                                <GridColumn Field="@nameof(MasterTagCategoryResponse.Name)" Title="Name"/>
                                <GridColumn Field="@nameof(MasterTagCategoryResponse.Type)" Title="Type">
                                    <EditorTemplate>
                                        @{
                                            selectedCategory = (MasterTagCategoryResponse) context;
                                            <TelerikDropDownList Data="@Types"
                                                                 @bind-Value="@selectedCategory.Type"
                                                                 >
                                                <DropDownListSettings>
                                                    <DropDownListPopupSettings Height="auto" />
                                                </DropDownListSettings>
                                            </TelerikDropDownList>
                                        }
                                    </EditorTemplate>
                                </GridColumn>
                                <GridColumn Field="@nameof(MasterTagCategoryResponse.ClassName)" Visible="false"/>
                                <GridCommandColumn>
                                    <GridCommandButton Command="Edit" Icon="@SvgIcon.Pencil">Edit</GridCommandButton>
                                    <GridCommandButton Command="Delete" Icon="@SvgIcon.Trash">Delete</GridCommandButton>
                                </GridCommandColumn>
                            </GridColumns>
                        </TelerikGrid>
        </div>
      
        <div style="display:inline-block; width: 49%; margin-left: 10px;">
            
        </div>
    </TabStripTab>
    <TabStripTab Title="Team Members">
        <TelerikGrid Data="@masterTeamMemberCategories"
                             Pageable="true"
                             Sortable="true"
                             Width="49%"
                             FilterMode="@GridFilterMode.FilterMenu">
            <GridColumns>
                <GridColumn Field=@nameof(MasterTagCategoryResponse.Name) Title="Name"/>
                <GridColumn Field=@nameof(MasterTagCategoryResponse.Type) Title="Type"/>
                <GridCommandColumn>
                    
                </GridCommandColumn>
            </GridColumns>
        </TelerikGrid>
    </TabStripTab>
    <TabStripTab Title="Stakeholders">

    </TabStripTab>
    <TabStripTab Title="Skills">

    </TabStripTab>

</TelerikTabStrip>


@code {

    private List<MasterTagCategoryResponse> categories = new();
    private List<MasterTagCategoryResponse> masterTeamCategories = new();
    private List<MasterTagCategoryResponse> masterTeamMemberCategories = new();
    private MasterTagCategoryResponse selectedCategory = new();
    private List<string> Types = new () { "All", "Individual", "Team", "MultiTeam", "Enterprise" };//.Select(x=> new CategoryType(x,x)).ToList();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            selectedCategory.Type= "All";
            await RefreshGrid();
        }
    }

    private async Task RefreshGrid()
    {
        categories = await MasterTagCategoryService.GetMasterTagCategories();
        masterTeamCategories = categories.Where(x => x.ClassName == "MasterTeamCategory").ToList();
        masterTeamMemberCategories = categories.Where(x => x.ClassName == "MasterTeamMemberCategory").ToList();
        StateHasChanged();
    }

    private Task CategoryClicked(GridRowClickEventArgs args)
    {
        var category = (MasterTagCategoryResponse) args.Item;
        Console.WriteLine(category.Name + " clicked");
        return Task.CompletedTask;
    }

    private async Task UpdateHandler(GridCommandEventArgs args)
    {
        var category = (MasterTagCategoryResponse) args.Item;
        await MasterTagCategoryService.UpdateMasterTagCategory(category);
        await RefreshGrid();
    }

    private async Task CreateHandler(GridCommandEventArgs arg, string className)
    {
        var data = (MasterTagCategoryResponse) arg.Item;
        data.ClassName = className;
        await MasterTagCategoryService.CreateMasterTagCategory(data);
        await RefreshGrid();
    }
   
}
